/**
 * This class is generated by jOOQ
 */
package com.currant.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.1.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SportRecord extends org.jooq.impl.UpdatableRecordImpl<com.currant.jooq.tables.records.SportRecord> implements org.jooq.Record8<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Boolean> {

	private static final long serialVersionUID = 1460119891;

	/**
	 * Setter for <code>public.sport.sport_id</code>. 
	 */
	public void setSportId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.sport.sport_id</code>. 
	 */
	public java.lang.Long getSportId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>public.sport.label</code>. 
	 */
	public void setLabel(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.sport.label</code>. 
	 */
	public java.lang.String getLabel() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>public.sport.description</code>. 
	 */
	public void setDescription(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.sport.description</code>. 
	 */
	public java.lang.String getDescription() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>public.sport.image_url</code>. 
	 */
	public void setImageUrl(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.sport.image_url</code>. 
	 */
	public java.lang.String getImageUrl() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>public.sport.min_players</code>. 
	 */
	public void setMinPlayers(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.sport.min_players</code>. 
	 */
	public java.lang.Integer getMinPlayers() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>public.sport.max_players</code>. 
	 */
	public void setMaxPlayers(java.lang.Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.sport.max_players</code>. 
	 */
	public java.lang.Integer getMaxPlayers() {
		return (java.lang.Integer) getValue(5);
	}

	/**
	 * Setter for <code>public.sport.wait_list_amount</code>. 
	 */
	public void setWaitListAmount(java.lang.Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.sport.wait_list_amount</code>. 
	 */
	public java.lang.Integer getWaitListAmount() {
		return (java.lang.Integer) getValue(6);
	}

	/**
	 * Setter for <code>public.sport.active</code>. 
	 */
	public void setActive(java.lang.Boolean value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.sport.active</code>. 
	 */
	public java.lang.Boolean getActive() {
		return (java.lang.Boolean) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Boolean> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Boolean> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return com.currant.jooq.tables.Sport.SPORT.SPORT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return com.currant.jooq.tables.Sport.SPORT.LABEL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return com.currant.jooq.tables.Sport.SPORT.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return com.currant.jooq.tables.Sport.SPORT.IMAGE_URL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return com.currant.jooq.tables.Sport.SPORT.MIN_PLAYERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field6() {
		return com.currant.jooq.tables.Sport.SPORT.MAX_PLAYERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field7() {
		return com.currant.jooq.tables.Sport.SPORT.WAIT_LIST_AMOUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field8() {
		return com.currant.jooq.tables.Sport.SPORT.ACTIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getSportId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getLabel();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getImageUrl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getMinPlayers();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value6() {
		return getMaxPlayers();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value7() {
		return getWaitListAmount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value8() {
		return getActive();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SportRecord
	 */
	public SportRecord() {
		super(com.currant.jooq.tables.Sport.SPORT);
	}
}
